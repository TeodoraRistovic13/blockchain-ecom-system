version: '3'

services:
  authenticationDB:
    image: mysql
    environment:
       - MYSQL_ROOT_PASSWORD=root
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 10s
      retries: 10
    ports:
      - 3306:3306
    networks:
      - mynet
    #volumes: 
        #C:/Users/Zoki/Desktop/projekat/authenticationData:/var/lib/mysql

  authenticationDBMigration:
    build:
      context: ./authentication
      dockerfile: authenticationDBMigration.dockerfile
    image: authenticationdbmigration
    environment:
      - DATABASE_URL=authenticationDB
    depends_on:
      authenticationDB:
        condition: service_healthy
    networks:
      - mynet

  authentication:
    build:
      context: ./authentication
      dockerfile: authentication.dockerfile
    image: authentication
    environment:
      - DATABASE_URL=authenticationDB
    depends_on:
      - authenticationDBMigration
    ports:
      - 5002:5002
    networks:
      - mynet

  adminer:
    image: adminer
    ports:
      - 8083:8080
    networks:
      - mynet
      - mynet1

  productsDB:
    image: mysql
    environment:
      - MYSQL_ROOT_PASSWORD=root
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      timeout: 10s
      retries: 10
    ports:
      - 3307:3306
    networks:
      - mynet1
    # volumes: 
        #C:/Users/Zoki/Desktop/projekat/shopData:/var/lib/mysql

  productsDBMigration:
    build:
      context: ./application
      dockerfile: productsDBMigration.dockerfile
    image: productsdbmigration
    environment:
      - DATABASE_URL=productsDB
    depends_on:
      productsDB:
        condition: service_healthy
    networks:
      - mynet1

  ownerApplication:
    build:
      context: ./application
      dockerfile: ownerApplication.dockerfile
    image: ownerapplication
    environment:
      - DATABASE_URL=productsDB
    depends_on:
      - productsDBMigration
    ports:
      - 5003:5003
    networks:
      - mynet1
    volumes:
    - ./sparkData:/data

  customerApplication:
    build:
      context: ./application
      dockerfile: customerApplication.dockerfile
    image: customerapplication
    environment:
      - DATABASE_URL=productsDB
    depends_on:
      - productsDBMigration
      - ganacheContainer
    ports:
      - 5004:5004
    networks:
      - mynet1

  courierApplication:
    build:
      context: ./application
      dockerfile: courierApplication.dockerfile
    image: courierapplication
    environment:
      - DATABASE_URL=productsDB
    depends_on:
      - ganacheContainer
      - productsDBMigration

    ports:
      - 5005:5005
    networks:
      - mynet1

  spark-master:
    image: bde2020/spark-master:3.3.0-hadoop3.3
    container_name: spark-master
    ports:
      - 8080:8080
      - 7077:7077
    environment:
      - INIT_DAEMON_STEP=setup_spark
    depends_on:
      - productsDBMigration
    networks:
      - mynet1

  spark-worker-1:
      image: bde2020/spark-worker:3.3.0-hadoop3.3
      container_name: spark-worker-1
      depends_on:
        - spark-master
      ports:
        - 8081:8081
      environment:
        - SPARK_MASTER=spark://spark-master:7077
      networks:
        - mynet1

  spark-worker-2:
      image: bde2020/spark-worker:3.3.0-hadoop3.3
      container_name: spark-worker-2
      depends_on:
        - spark-master
      ports:
        - 8082:8081
      environment:
        - SPARK_MASTER=spark://spark-master:7077
      networks:
        - mynet1

  sparkapp:
    build:
      context: ./spark
      dockerfile: sparkImage.dockerfile
    image: sparkimage
    environment:
      - PRODUCTION=True
      - SOCKET_IP=0.0.0.0
      - SOCKET_PORT=9090
      - SPARKAPP_IP=sparkapp
    depends_on:
      - spark-master
    ports:
      - 5000:5000
    networks:
      - mynet1
    volumes:
       - ./sparkData:/data

  ganacheContainer:
    image: trufflesuite/ganache-cli
    ports:
      - 8545:8545
    networks:
      - mynet1
    healthcheck:
      test: [ "CMD", "nc", "-z", "localhost", "8545" ]
      interval: 10s
      timeout: 5s
      retries: 3



networks:
  mynet:

  mynet1:


